package com.example.myandroidstores.dialog;

import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.FrameLayout;

import com.example.myandroidstores.R;

public class DialogManager {
	
	/**
	 * 对话框实例
	 */
	public Dialog dlg ;
	/**
	 * 对话框rootView 
	 */
	public ViewGroup rootView;
	/**
	 * 当前显示的内容
	 */
	public View contentView ;
	
	/**
	 * 创建对话框---可以做为工具使用
	 * @param context
	 * @param view
	 * @return
	 */
	public static Dialog createCustomDialog(Context context , View view ){
		Dialog dialog = new Dialog(context , R.style.theme_customDialog);
		dialog.setContentView(view);
		return dialog;
	}
	/**
	 * 初始化对话框工具
	 * @param activity
	 */
	public DialogManager(Activity activity){
		initDialog(activity);
	}
	
	/**
	 * 初始化对话框
	 * @param context
	 */
	private void initDialog(Context context){
		if(null == dlg){
			rootView = new FrameLayout(context);
			dlg = createCustomDialog(context, rootView);
			WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
			lp.copyFrom(dlg.getWindow().getAttributes());
			lp.width=WindowManager.LayoutParams.MATCH_PARENT;
			lp.height=WindowManager.LayoutParams.MATCH_PARENT;
			dlg.getWindow().setAttributes(lp);
		}
	}
	
	public void showDialog(View contentView , OnShowDialog showCallback){
		rootView.removeAllViews();
		rootView.addView(contentView);
		if(null != showCallback){
			showCallback.onAttachToDialogView(dlg, contentView);
		}
	}
	
	
	/**
	 * 在 显示对话框的操作
	 * @author ASRock
	 *
	 */
	public interface OnShowDialog{
		/**
		 * 初始化对话框的操作，例如一般按钮的点击事件等等
		 * @param dlg
		 * @param dlgView  
		 */
		public void onAttachToDialogView(Dialog dlg , View dlgView);
		
		/**
		 * 在显示对话框之前的回调，可以动态改变内容
		 * @param dlg
		 * @param dlgView
		 */
		public void beforeShowDialog(Dialog dlg , View dlgView);
	}
}
